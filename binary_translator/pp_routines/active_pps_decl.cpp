// Generated by llvm2cpp - DO NOT MODIFY!
#include <type_traits>

#include "llvm/Pass.h"
#include "llvm/PassManager.h"
#include "llvm/IRReader/IRReader.h"
#include "llvm/ADT/Statistic.h"
#include "llvm/ADT/StringRef.h"
#include "llvm/ADT/APInt.h"
#include "llvm/IR/LLVMContext.h"
#include "llvm/IR/BasicBlock.h"
#include "llvm/IR/CallingConv.h"
#include "llvm/IR/Constants.h"
#include "llvm/IR/DerivedTypes.h"
#include "llvm/IR/GlobalVariable.h"
#include "llvm/IR/IRPrintingPasses.h"
#include "llvm/IR/InlineAsm.h"
#include "llvm/IR/Instructions.h"
#include "llvm/IR/IRBuilder.h"
#include "llvm/IR/Value.h"
#include "llvm/IR/Module.h"
#include "llvm/IR/Function.h"
#include "llvm/IR/CFG.h"
#include "llvm/Pass.h"
#include "llvm/Support/raw_ostream.h"
#include "llvm/Support/SourceMgr.h"

using namespace llvm;

GlobalVariable* makeActivePpsVariable(Module *mod) {

  // Type Definitions
  ArrayType* ArrayTy_1 = ArrayType::get(IntegerType::get(mod->getContext(), 64), 1024);

  PointerType* PointerTy_0 = PointerType::get(ArrayTy_1, 0);


  // Constant Definitions
  ConstantAggregateZero* const_array_2 = ConstantAggregateZero::get(ArrayTy_1);

  GlobalVariable* gvar_array_active_pps = new GlobalVariable(/*Module=*/*mod, 
      /*Type=*/ArrayTy_1,
      /*isConstant=*/false,
      /*Linkage=*/GlobalValue::InternalLinkage,
      /*Initializer=*/0, // has initializer, specified below
      /*Name=*/"active_pps");
  gvar_array_active_pps->setAlignment(16);
  gvar_array_active_pps->setInitializer(const_array_2);
  return gvar_array_active_pps;
}
